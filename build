#!/usr/bin/env sh

#  __   __   __
# /  \ |__) /  \
# \__/ |  \ \__/
#
# ORO BUILD GENERATOR
# Copyright (c) 2021-2022, Josh Junon
# License TBD
#

#
# Oro build system entry point
#

set -eu

die() {
	echo "error:" "$@" >&2
	exit 2
}

[ ! -z "${1-}" ] || die "do not run directly - this build script should be a part of a shebang"
[ ! -z "${2-}" ] || die "usage: ${1} <bin_dir>"

THIS_SCRIPT="${0}"
BUILD_SCRIPT="${1}"
ROOT_DIR="$(dirname "${0}")/oro-build"
BOOTSTRAP_SCRIPT="$ROOT_DIR/oro-build.lua"
BIN_DIR="${2}"

shift 2

if [ ! -d "$BIN_DIR/.oro" ]; then
	mkdir -p "$BIN_DIR/.oro" || die "failed to create build directory: ${BIN_DIR}"
fi

if [ ! -f "$BIN_DIR/.oro/build" ] || test "$ROOT_DIR/oro-build.c" -nt "$BIN_DIR/.oro/build" ; then
	CC="${CC-cc}"

	"${CC}" --version >/dev/null ||\
		die "either \$CC not set, or it/'cc' (the default) does not refer to a valid program"

	echo 'first run detected; bootstrapping Oro build...'

	comp_flags="-O3 -g0"
	if [ ! -z "${ORO_BUILD_DEBUG-}" ]; then
		comp_flags="-O0 -g3"
	fi

	"${CC}" -o "$BIN_DIR/.oro/build" ${comp_flags} -Wall -Wextra -Werror -I"$ROOT_DIR/ext/lua" "$ROOT_DIR/oro-build.c" -lm
fi

# TODO(qix-) If someone knows a better way to DRY this up
#            without requiring Bash, a PR would be great.
if [ ! -z "${ORO_BUILD_DEBUG-}" ]; then
	exec gdb --args "${BIN_DIR}/.oro/build" "$ROOT_DIR" "$BIN_DIR" "$BOOTSTRAP_SCRIPT" "$BUILD_SCRIPT" "$@"
else
	set +e
	"${BIN_DIR}/.oro/build" "$ROOT_DIR" "$BIN_DIR" "$BOOTSTRAP_SCRIPT" "$BUILD_SCRIPT" "$@"
	status=$?
	set -e

	# Helpful hint for ORO_BUILD_DEBUG
	#    SIGILL                 SIGABRT                SIGFPE                 SIGSEGV
	if [ $status -eq 132 ] || [ $status -eq 134 ] || [ $status -eq 136 ] || [ $status -eq 139 ]; then
		echo >&2
		echo 'CRASHED! It appears the Oro build system crashed - this is most likely a bug.' >&2
		echo '         A bug report with any associated scripts would be highly appreciated.' >&2
		echo '         https://github.com/oro-os/build/issues/new' >&2
		echo >&2
		echo '         To drop into a `gdb` instance, remove .oro/build from the build directory' >&2
		echo '         and re-configure with the environment variable `ORO_BUILD_DEBUG=1`.' >&2
		echo >&2
	fi

	exit $status
fi

# vim: set syntax=sh:
